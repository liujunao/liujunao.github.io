[{"title":"SQL反模式(一)","date":"2017-12-12T03:30:24.000Z","path":"SQL反模式-一.html","text":"1. 乱穿马路: 程序员通常使用逗号分隔的列表来避免在多对多的关系中创建交叉表，这种反模式称为“乱穿马路” 目标：储存多值属性 12345678&gt; CREATE TABLE Product(&gt; product_id SERIAL PRIMARY KEY,&gt; product_name VARCHAR(100),&gt; account_id BIGINT UNSIGNED,&gt; ...&gt; FOREGIN KEY (account_id) REFERENCES Accounts(account_id)&gt; );&gt; &gt; ​ 反模式：格式化的逗号分隔符： 在一个字段中储存多个ID，并用逗号隔开 1234567&gt; CREATE TABLE Product(&gt; product_id SERIAL PRIMARY KEY,&gt; product_name VARCHAR(100),&gt; account_id VARCHAR(1000), ---&gt; 逗号分隔列表&gt; ...&gt; );&gt; &gt; ​ &gt; 1. 查询指定帐号的产品：所有外键都合并在一个单元格内，查询会变得很困难 &gt; 2. 查询指定产品的帐号：做多表联接查询定位一行数据将是不优雅和耗时的 &gt; 3. 执行聚合查询：使用SQL内置的聚合函数，如：COUNT(),SUM(),AVG()等，但这些函数是针对分组行而设计的 &gt; 4. 更新指定产品的帐号：不能使列表按顺序储存 &gt; 5. 验证产品ID：无法对输入的数据的非法字段进行验证 &gt; 6. 列表长度限制 解决：创建一张交叉表 12345678&gt; CREATE TABLE Contacts(&gt; product_id BIGINT UNSIGNED NOT NULL,&gt; account_id BIGINT UNSIGNED NOT NULL,&gt; PRIMARY KEY (product_id,account_id),&gt; FOREGIN KEY (product_id) REFERENCES Products(product_id),&gt; FOREGIN KEY (account_id) REFERENCES Accounts(account_id)&gt; );&gt; 2. 单纯的树 解决网站对文章的评论和相互评论的评论的数据的增删改查操作 目标：分层储存与查询 反模式：总是依赖父节点 123456&gt; &gt; CREATE TABLE Comments(&gt; &gt; comment_id SERIAL FOREGIN KEY ,&gt; &gt; **parent_id** BIGINT UNSIGNED,&gt; &gt; FOREGIN KEY (parent_id) REFERENCES Products(comment_id),&gt; &gt; );&gt; &gt; &gt; 使用邻接表查询树 使用邻接表维护树：增加一个字节点和修改一个节点的位置将会很简单，但删除一个节点会变得复杂 解决方案：使用其他树模型 路径枚举：通过将所有祖先的信息联合成一个字符串，并保存为每个节点的一个属性 嵌套集：储存子孙节点的相关信息 闭包表：记录了树中所有节点间的关系 优劣对比","categories":[{"name":"SQL反模式","slug":"SQL反模式","permalink":"yinren.51oinfo.com/categories/SQL反模式/"}],"tags":[{"name":"逻辑型数据库设计反模式","slug":"逻辑型数据库设计反模式","permalink":"yinren.51oinfo.com/tags/逻辑型数据库设计反模式/"}]}]